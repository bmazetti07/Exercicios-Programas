{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var play = function play(playbackObj, uri) {\n  return _regeneratorRuntime.async(function play$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(playbackObj.loadAsync({\n            uri: uri\n          }, {\n            shouldPlay: true\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('Erro ao tocar', _context.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var pause = function pause(playbackObj) {\n  return _regeneratorRuntime.async(function pause$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(playbackObj.setStatusAsync({\n            shouldPlay: false\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Erro ao pausar', _context2.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var resume = function resume(playbackObj) {\n  return _regeneratorRuntime.async(function resume$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(playbackObj.playAsync());\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('Erro ao continuar a música', _context3.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};","map":{"version":3,"sources":["/home/mazetti/Bruno/eps/Computação Móvel/EP1/app/misc/audioController.js"],"names":["play","playbackObj","uri","loadAsync","shouldPlay","console","log","message","pause","setStatusAsync","resume","playAsync"],"mappings":";AACA,OAAO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAOC,WAAP,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEHD,WAAW,CAACE,SAAZ,CACX;AAAED,YAAAA,GAAG,EAAHA;AAAF,WADW,EAEX;AAAEE,YAAAA,UAAU,EAAE;AAAd,WAFW,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOhBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAMC,OAAnC;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;AAYP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOP,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJA,WAAW,CAACQ,cAAZ,CACX;AAAEL,YAAAA,UAAU,EAAE;AAAd,WADW,CAFI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMjBC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,aAAMC,OAApC;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAWP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAOT,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELA,WAAW,CAACU,SAAZ,EAFK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIlBN,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,aAAMC,OAAhD;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["// Tocar áudio\nexport const play = async (playbackObj, uri) => {\n  try {\n    return await playbackObj.loadAsync(\n      { uri },\n      { shouldPlay: true }\n    )\n  } catch (error) {\n    console.log('Erro ao tocar', error.message)\n  }\n}\n\n// Pausar Áudio\nexport const pause = async (playbackObj) => {\n  try {\n    return await playbackObj.setStatusAsync(\n      { shouldPlay: false }\n    )\n  } catch (error) {\n    console.log('Erro ao pausar', error.message)\n  }\n}\n\n// Continuar o Áudio\nexport const resume = async (playbackObj) => {\n  try {\n    return await playbackObj.playAsync()\n  } catch (error) {\n    console.log('Erro ao continuar a música', error.message)\n  }\n}"]},"metadata":{},"sourceType":"module"}