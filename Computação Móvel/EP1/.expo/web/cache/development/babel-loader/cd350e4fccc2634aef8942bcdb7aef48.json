{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mazetti/Bruno/eps/Computa\\xE7\\xE3o M\\xF3vel/EP1/app/screens/WeatherHistory.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport WeatherScroll from \"../components/WeatherScroll\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar WeatherHistory = function WeatherHistory(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1];\n\n  var getData = function getData() {\n    var keys, result;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiGet(keys));\n\n          case 6:\n            result = _context.sent;\n            setWeatherData(result);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var removeData = function removeData(key) {\n    return _regeneratorRuntime.async(function removeData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(getData());\n\n          case 11:\n            return _context2.finish(8);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5, 8, 12]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, weatherData.map(function (item) {\n    if (item[0].length <= 16) {\n      return React.createElement(View, {\n        key: item[0],\n        style: {\n          flex: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return removeData(item[0]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.dateHistory,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \" \", item[0], \" \"), React.createElement(WeatherScroll, {\n        currentWeatherDetails: JSON.parse(item[1]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      })));\n    }\n  })), React.createElement(View, {\n    style: styles.bottomContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.bottomControls,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('PlayingScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    color: \"#fff\",\n    name: \"headphones\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SongsList');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Entypo, {\n    color: \"#fff\",\n    name: \"list\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('LoadingScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    color: \"#fff\",\n    name: \"cloud\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default WeatherHistory;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    backgroundColor: '#222831'\n  },\n  mainContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bottomContainer: {\n    borderTopColor: '#393E46',\n    borderTopWidth: 1,\n    width: width,\n    alignItems: 'center',\n    paddingVertical: 15\n  },\n  bottomControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%'\n  },\n  dateHistory: {\n    fontWeight: '200',\n    fontSize: 20,\n    paddingBottom: 0,\n    color: 'white',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mazetti/Bruno/eps/Computação Móvel/EP1/app/screens/WeatherHistory.js"],"names":["React","useEffect","useState","Component","TouchableOpacity","Entypo","MaterialCommunityIcons","WeatherScroll","AsyncStorage","Dimensions","get","width","WeatherHistory","navigation","weatherData","setWeatherData","getData","getAllKeys","keys","multiGet","result","console","error","removeData","key","removeItem","alert","styles","container","map","item","length","flex","dateHistory","JSON","parse","bottomContainer","bottomControls","navigate","StyleSheet","create","backgroundColor","mainContainer","flexDirection","alignItems","justifyContent","borderTopColor","borderTopWidth","paddingVertical","fontWeight","fontSize","paddingBottom","color","alignSelf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;AASA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,sBAAkBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACzC,kBAAsCX,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOR,YAAY,CAACS,UAAb,EAFP;;AAAA;AAENC,YAAAA,IAFM;AAAA;AAAA,6CAGSV,YAAY,CAACW,QAAb,CAAsBD,IAAtB,CAHT;;AAAA;AAGNE,YAAAA,MAHM;AAKZL,YAAAA,cAAc,CAACK,MAAD,CAAd;AALY;AAAA;;AAAA;AAAA;AAAA;AAOZC,YAAAA,OAAO,CAACC,KAAR;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEThB,YAAY,CAACiB,UAAb,CAAwBD,GAAxB,CAFS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIfE,YAAAA,KAAK,cAAL;;AAJe;AAAA;AAAA;AAAA,6CAMTV,OAAO,EANE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAUAf,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEW,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,WAAW,CAACe,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACvB,QAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,MAAR,IAAkB,EAAtB,EAA0B;AACxB,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAED,IAAI,CAAC,CAAD,CAAf;AAAoB,QAAA,KAAK,EAAE;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMT,UAAU,CAACO,IAAI,CAAC,CAAD,CAAL,CAAhB;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmCH,IAAI,CAAC,CAAD,CAAvC,MADF,EAEE,oBAAC,aAAD;AAAe,QAAA,qBAAqB,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAf,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAQD;AACF,GAXA,CADH,CADF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACS,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMxB,UAAU,CAACyB,QAAX,CAAoB,eAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,YAA1C;AAAuD,IAAA,IAAI,EAAE,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMzB,UAAU,CAACyB,QAAX,CAAoB,WAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EASE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMzB,UAAU,CAACyB,QAAX,CAAoB,eAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AAAkD,IAAA,IAAI,EAAE,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF,CAjBF,CADF;AAmCD,CA/DD;;AAiEA,eAAe1B,cAAf;AAEA,IAAMe,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,GADG;AAETS,IAAAA,eAAe,EAAE;AAFR,GADoB;AAM/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,aAAa,EAAE,KADF;AAEbX,IAAAA,IAAI,EAAE,CAFO;AAGbrB,IAAAA,KAAK,EAAE,MAHM;AAIbiC,IAAAA,UAAU,EAAE,QAJC;AAKbC,IAAAA,cAAc,EAAE;AALH,GANgB;AAc/BT,EAAAA,eAAe,EAAE;AACfU,IAAAA,cAAc,EAAE,SADD;AAEfC,IAAAA,cAAc,EAAE,CAFD;AAGfpC,IAAAA,KAAK,EAAEA,KAHQ;AAIfiC,IAAAA,UAAU,EAAE,QAJG;AAKfI,IAAAA,eAAe,EAAE;AALF,GAdc;AAsB/BX,EAAAA,cAAc,EAAE;AACdM,IAAAA,aAAa,EAAE,KADD;AAEdE,IAAAA,cAAc,EAAE,eAFF;AAGdlC,IAAAA,KAAK,EAAE;AAHO,GAtBe;AA4B/BsB,EAAAA,WAAW,EAAE;AACXgB,IAAAA,UAAU,EAAE,KADD;AAEXC,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,aAAa,EAAE,CAHJ;AAIXC,IAAAA,KAAK,EAAE,OAJI;AAKXC,IAAAA,SAAS,EAAE;AALA;AA5BkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Dimensions,\n  SafeAreaView,\n  ScrollView,\n} from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport WeatherScroll from '../components/WeatherScroll';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst { width } = Dimensions.get('window')\n\nconst WeatherHistory = ({ navigation }) => {\n  const [weatherData, setWeatherData] = useState([])\n\n  const getData = async () => {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      const result = await AsyncStorage.multiGet(keys);\n\n      setWeatherData(result)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const removeData = async (key) => {\n    try {\n      await AsyncStorage.removeItem(key)\n    } catch (error) {\n      alert(error)\n    } finally {\n      await getData()\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        {weatherData.map(item => {\n          if (item[0].length <= 16) {\n            return (\n              <View key={item[0]} style={{ flex: 1 }}>\n                <TouchableOpacity onPress={() => removeData(item[0])}>\n                  <Text style={styles.dateHistory}> {item[0]} </Text>\n                  <WeatherScroll currentWeatherDetails={JSON.parse(item[1])} />\n                </TouchableOpacity>\n              </View>\n            )\n          }\n        }\n        )}\n      </ScrollView>\n\n      <View style={styles.bottomContainer}>\n        <View style={styles.bottomControls}>\n          <TouchableOpacity onPress={() => navigation.navigate('PlayingScreen')}>\n            <MaterialCommunityIcons color='#fff' name=\"headphones\" size={30} />\n          </TouchableOpacity>\n\n          <TouchableOpacity onPress={() => navigation.navigate('SongsList')}>\n            <Entypo color='#fff' name=\"list\" size={30} />\n          </TouchableOpacity>\n\n          <TouchableOpacity onPress={() => navigation.navigate('LoadingScreen')}>\n            <MaterialCommunityIcons color='#fff' name=\"cloud\" size={30} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default WeatherHistory\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    backgroundColor: '#222831'\n  },\n\n  mainContainer: {\n    flexDirection: 'row',\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n\n  bottomContainer: {\n    borderTopColor: '#393E46',\n    borderTopWidth: 1,\n    width: width,\n    alignItems: 'center',\n    paddingVertical: 15\n  },\n\n  bottomControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%'\n  },\n\n  dateHistory: {\n    fontWeight: '200',\n    fontSize: 20,\n    paddingBottom: 0,\n    color: 'white',\n    alignSelf: 'center'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}