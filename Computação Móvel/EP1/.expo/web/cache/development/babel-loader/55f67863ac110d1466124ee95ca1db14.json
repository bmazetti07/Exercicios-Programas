{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mazetti/Bruno/eps/Computa\\xE7\\xE3o M\\xF3vel/EP1/app/screens/LoginWeather.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport DateTime from \"../components/DateTime\";\nimport WeatherScroll from \"../components/WeatherScroll\";\nimport * as Google from 'expo-google-app-auth';\nimport * as Location from 'expo-location';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport firebase from \"../config/firebaseconfig\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar WEATHER_API_KEY = \"2655473f065b2f9524803e99f782218f\";\nvar BASE_WEATHER_URL = \"https://api.openweathermap.org/data/2.5/weather?\";\nvar semana = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'];\n\nvar LoginWeather = function LoginWeather(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentWeatherDetails = _useState4[0],\n      setCurrentWeatherDetails = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentDate = _useState6[0],\n      setCurrentDate = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      weekDay = _useState8[0],\n      setWeekDay = _useState8[1];\n\n  var getCurrentDate = function getCurrentDate() {\n    var time = new Date();\n    var mes = time.getMonth() + 1;\n    var date = time.getDate();\n    var ano = time.getFullYear();\n    var hora = time.getHours();\n    var minutos = time.getMinutes();\n    var day = semana[time.getDay()];\n    setWeekDay(day);\n    return date + '/' + mes + '/' + ano + ' ' + (hora < 10 ? '0' + hora : hora) + ':' + (minutos < 10 ? '0' + minutos : minutos);\n  };\n\n  useEffect(function () {\n    load();\n  }, [weekDay, currentDate]);\n\n  var load = function load() {\n    var _await$Location$reque, status, location, _location$coords, latitude, longitude, weatherUrl, response, result;\n\n    return _regeneratorRuntime.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCurrentWeatherDetails(null);\n            setErrorMessage(null);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 5:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== \"granted\")) {\n              _context.next = 10;\n              break;\n            }\n\n            setErrorMessage(\"É necessário permissão para rodar o aplicativo!\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 12:\n            location = _context.sent;\n            _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n            weatherUrl = BASE_WEATHER_URL + \"lat=\" + latitude + \"&lon=\" + longitude + \"&units=metric&appid=\" + WEATHER_API_KEY + \"&lang=pt\";\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(fetch(weatherUrl));\n\n          case 17:\n            response = _context.sent;\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 20:\n            result = _context.sent;\n\n            if (response.ok) {\n              setCurrentDate(getCurrentDate());\n              result.weekDay = weekDay;\n              setCurrentWeatherDetails(result);\n            } else {\n              setErrorMessage(result.message);\n            }\n\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](2);\n            load();\n            setErrorMessage(_context.t0.message);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 24]], Promise);\n  };\n\n  var saveWeather = function saveWeather() {\n    return _regeneratorRuntime.async(function saveWeather$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(currentDate, JSON.stringify(currentWeatherDetails)));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  if (currentWeatherDetails) {\n    return React.createElement(SafeAreaView, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, React.createElement(StatusBar, {\n      barStyle: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), React.createElement(DateTime, {\n      currentWeatherDetails: currentWeatherDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), React.createElement(WeatherScroll, {\n      currentWeatherDetails: currentWeatherDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.mainContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.infoContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return saveWeather();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      title: \"SALVAR INFO CLIMA ATUAL\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('WeatherHistory');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      color: \"#fff\",\n      name: \"history\",\n      size: 35,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: styles.secondInfoContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return firebase.auth().signOut();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, React.createElement(LinearGradient, {\n      colors: ['red', 'red'],\n      style: styles.signIn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, React.createElement(AntDesign, {\n      color: \"#fff\",\n      name: \"google\",\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.textSign,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \" DESLOGAR DO GOOGLE \"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return load();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, React.createElement(AntDesign, {\n      color: \"#fff\",\n      name: \"reload1\",\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })))), React.createElement(View, {\n      style: styles.bottomContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.bottomControls,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('PlayingScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      color: \"#fff\",\n      name: \"headphones\",\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('SongsList');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, React.createElement(Entypo, {\n      color: \"#fff\",\n      name: \"list\",\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })))));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.mainContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: '#fff',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default LoginWeather;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    backgroundColor: '#222831'\n  },\n  mainContainer: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bottomContainer: {\n    borderTopColor: '#393E46',\n    borderTopWidth: 1,\n    width: width,\n    alignItems: 'center',\n    paddingVertical: 15\n  },\n  bottomControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '80%'\n  },\n  signIn: {\n    width: 220,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    flexDirection: 'row',\n    margin: 20\n  },\n  textSign: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  infoContainer: {\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'space-between',\n    alignContent: 'space-around',\n    marginRight: 5,\n    paddingTop: 7,\n    height: 50,\n    width: '65%'\n  },\n  secondInfoContainer: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    marginRight: 35\n  }\n});","map":{"version":3,"sources":["/home/mazetti/Bruno/eps/Computação Móvel/EP1/app/screens/LoginWeather.js"],"names":["React","useEffect","useState","TouchableOpacity","LinearGradient","Entypo","MaterialCommunityIcons","AntDesign","DateTime","WeatherScroll","Google","Location","AsyncStorage","firebase","Dimensions","get","width","WEATHER_API_KEY","BASE_WEATHER_URL","semana","LoginWeather","navigation","errorMessage","setErrorMessage","currentWeatherDetails","setCurrentWeatherDetails","currentDate","setCurrentDate","weekDay","setWeekDay","getCurrentDate","time","Date","mes","getMonth","date","getDate","ano","getFullYear","hora","getHours","minutos","getMinutes","day","getDay","load","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","weatherUrl","fetch","response","json","result","ok","message","saveWeather","setItem","JSON","stringify","alert","styles","container","mainContainer","infoContainer","navigate","secondInfoContainer","auth","signOut","signIn","textSign","bottomContainer","bottomControls","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","borderTopColor","borderTopWidth","paddingVertical","flexDirection","height","borderRadius","margin","color","fontWeight","alignContent","marginRight","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Dimensions,\n  SafeAreaView,\n  StatusBar,\n  ActivityIndicator,\n  Button,\n} from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport DateTime from '../components/DateTime';\nimport WeatherScroll from '../components/WeatherScroll';\nimport * as Google from 'expo-google-app-auth'\nimport * as Location from 'expo-location';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport firebase from '../config/firebaseconfig';\n\nconst { width } = Dimensions.get('window')\nconst WEATHER_API_KEY = \"2655473f065b2f9524803e99f782218f\";\nconst BASE_WEATHER_URL = \"https://api.openweathermap.org/data/2.5/weather?\";\nconst semana = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'];\n\nconst LoginWeather = ({ navigation }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [currentWeatherDetails, setCurrentWeatherDetails] = useState(null)\n  const [currentDate, setCurrentDate] = useState(null)\n  const [weekDay, setWeekDay] = useState(null)\n\n  const getCurrentDate = () => {\n    const time = new Date();\n    const mes = time.getMonth() + 1;\n    const date = time.getDate();\n    const ano = time.getFullYear();\n    const hora = time.getHours();\n    const minutos = time.getMinutes();\n\n    const day = semana[time.getDay()]\n    setWeekDay(day)\n\n    return (date + '/' + mes + '/' + ano + ' ' + (hora < 10 ? '0' + hora : hora) + ':' + (minutos < 10 ? '0' + minutos : minutos))\n  }\n\n  useEffect(() => {\n    load();\n  }, [weekDay, currentDate]);\n\n  const load = async () => {\n    setCurrentWeatherDetails(null)\n    setErrorMessage(null)\n    try {\n      let { status } = await Location.requestForegroundPermissionsAsync()\n\n      if (status !== \"granted\") {\n        setErrorMessage(\"É necessário permissão para rodar o aplicativo!\")\n        return\n      }\n      const location = await Location.getCurrentPositionAsync()\n\n      const { latitude, longitude } = location.coords\n      const weatherUrl = `${BASE_WEATHER_URL}lat=${latitude}&lon=${longitude}&units=metric&appid=${WEATHER_API_KEY}&lang=pt`\n      const response = await fetch(weatherUrl)\n      const result = await response.json()\n\n      if (response.ok) {\n        setCurrentDate(getCurrentDate())\n\n        result.weekDay = weekDay\n        setCurrentWeatherDetails(result)\n      }\n      else {\n        setErrorMessage(result.message)\n      }\n    }\n\n    catch (error) {\n      load()\n      setErrorMessage(error.message)\n    }\n  }\n\n  const saveWeather = async () => {\n    try {\n      await AsyncStorage.setItem(currentDate, JSON.stringify(currentWeatherDetails))\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  if (currentWeatherDetails) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <StatusBar barStyle='default' />\n\n        <DateTime currentWeatherDetails={currentWeatherDetails} />\n\n        <WeatherScroll currentWeatherDetails={currentWeatherDetails} />\n\n        <View style={styles.mainContainer}>\n          <View style={styles.infoContainer}>\n            <TouchableOpacity onPress={() => saveWeather()}>\n              <Button\n                title=\"SALVAR INFO CLIMA ATUAL\"\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('WeatherHistory')}>\n              <MaterialCommunityIcons color='#fff' name=\"history\" size={35} />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.secondInfoContainer}>\n            <TouchableOpacity onPress={() => firebase.auth().signOut()}>\n              <LinearGradient\n                colors={['red', 'red']}\n                style={styles.signIn}\n              >\n                <AntDesign color='#fff' name=\"google\" size={30} />\n                <Text style={styles.textSign}> DESLOGAR DO GOOGLE </Text>\n              </LinearGradient>\n            </TouchableOpacity>\n\n\n            <TouchableOpacity onPress={() => load()}>\n              <AntDesign color='#fff' name=\"reload1\" size={30} />\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={styles.bottomContainer}>\n          <View style={styles.bottomControls}>\n            <TouchableOpacity onPress={() => navigation.navigate('PlayingScreen')}>\n              <MaterialCommunityIcons color='#fff' name=\"headphones\" size={30} />\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('SongsList')}>\n              <Entypo color='#fff' name=\"list\" size={30} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView >\n    )\n  }\n\n  else {\n    return (\n      <View style={styles.container}>\n        <View style={styles.mainContainer}>\n          <ActivityIndicator size=\"large\" color={'#fff'} />\n        </View>\n      </View>\n    )\n  }\n}\n\nexport default LoginWeather\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    backgroundColor: '#222831'\n  },\n\n  mainContainer: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  bottomContainer: {\n    borderTopColor: '#393E46',\n    borderTopWidth: 1,\n    width: width,\n    alignItems: 'center',\n    paddingVertical: 15\n  },\n\n  bottomControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '80%'\n  },\n\n  signIn: {\n    width: 220,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    flexDirection: 'row',\n    margin: 20,\n  },\n\n  textSign: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n\n  infoContainer: {\n    flexDirection: 'row',\n    alignContent: 'center',\n    justifyContent: 'space-between',\n    alignContent: 'space-around',\n    marginRight: 5,\n    paddingTop: 7,\n    height: 50,\n    width: '65%',\n  },\n\n  secondInfoContainer: {\n    flexDirection: 'row',\n    height: 60,\n    alignItems: 'center',\n    marginRight: 35\n  }\n})\n"]},"metadata":{},"sourceType":"module"}