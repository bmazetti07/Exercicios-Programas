{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mazetti/Bruno/eps/Computa\\xE7\\xE3o M\\xF3vel/EP1/app/components/DateTime.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport WeatherScroll from \"../components/WeatherScroll\";\n\nvar WeatherItem = function WeatherItem(_ref) {\n  var title = _ref.title,\n      value = _ref.value,\n      unit = _ref.unit;\n  return React.createElement(View, {\n    style: styles.weatherItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.weatherItemTopic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, title), React.createElement(Text, {\n    style: styles.weatherItemTopic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, value, unit));\n};\n\nvar semana = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'];\nvar ano = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\n\nvar DateTime = function DateTime(_ref2) {\n  var currentWeatherDetails = _ref2.currentWeatherDetails;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dia = _useState2[0],\n      setDia = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      horario = _useState4[0],\n      setHorario = _useState4[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      var time = new Date();\n      var mes = time.getMonth();\n      var data = time.getDate();\n      var dia = time.getDay();\n      var hora = time.getHours();\n      var minutos = time.getMinutes();\n      setDia(semana[dia] + ', ' + data + ', ' + ano[mes]);\n      setHorario((hora < 10 ? '0' + hora : hora) + ':' + (minutos < 10 ? '0' + minutos : minutos));\n    }, 1000);\n  }, []);\n  var umidade = currentWeatherDetails.main.humidity;\n  var pressao = currentWeatherDetails.main.pressure;\n  var vento = currentWeatherDetails.wind.speed;\n  var nebulosidade = currentWeatherDetails.clouds.all;\n  var lat = currentWeatherDetails.coord.lat;\n  lat = Math.floor(lat * 100) / 100;\n  var lon = currentWeatherDetails.coord.lon;\n  lon = Math.floor(lon * 100) / 100;\n  var cidade = currentWeatherDetails.name;\n  return React.createElement(View, {\n    style: styles.weatherContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.weatherHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, horario)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.weatherSubHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, dia)), React.createElement(View, {\n    style: styles.weatherItensContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(WeatherItem, {\n    title: \"Umidade\",\n    value: umidade,\n    unit: \"%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(WeatherItem, {\n    title: \"Press\\xE3o\",\n    value: pressao,\n    unit: \"hPa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), React.createElement(WeatherItem, {\n    title: \"Vel. Vento\",\n    value: vento,\n    unit: \"m/s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(WeatherItem, {\n    title: \"Nebulosidade\",\n    value: nebulosidade,\n    unit: \"%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.rightAlign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.weatherPlace,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, cidade), React.createElement(Text, {\n    style: styles.weatherCoords,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, lat, \"N \", lon, \"L\")));\n};\n\nexport default DateTime;\nvar styles = StyleSheet.create({\n  weatherContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 15,\n    marginBottom: 40,\n    paddingLeft: 15\n  },\n  weatherHeading: {\n    fontSize: 45,\n    color: 'white',\n    fontWeight: '100'\n  },\n  weatherSubHeading: {\n    fontSize: 25,\n    color: '#eee',\n    fontWeight: '300'\n  },\n  weatherItensContainer: {\n    backgroundColor: \"#18181b99\",\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    elevation: 100\n  },\n  weatherItem: {\n    flexDirection: \"row\",\n    justifyContent: 'space-between'\n  },\n  weatherItemTopic: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '100',\n    justifyContent: 'space-between'\n  },\n  weatherPlace: {\n    fontSize: 20,\n    color: 'white',\n    textAlign: 'center'\n  },\n  weatherCoords: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: '700',\n    textAlign: 'center'\n  },\n  rightAlign: {\n    textAlign: 'right',\n    marginTop: 20\n  },\n  image: {\n    width: 150,\n    height: 150\n  },\n  CurrentTempContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#18181b99',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 15,\n    borderColor: 'gray',\n    padding: 15\n  },\n  dia: {\n    fontSize: 20,\n    color: 'white',\n    backgroundColor: 'gray',\n    padding: 10,\n    textAlign: 'center',\n    borderRadius: 50,\n    fontWeight: '200',\n    marginBottom: 15\n  },\n  temperatura: {\n    fontSize: 15,\n    color: 'white',\n    fontWeight: '100',\n    textAlign: 'center'\n  },\n  innerContainer: {\n    paddingRight: 40\n  }\n});","map":{"version":3,"sources":["/home/mazetti/Bruno/eps/Computação Móvel/EP1/app/components/DateTime.js"],"names":["React","useEffect","useState","WeatherScroll","WeatherItem","title","value","unit","styles","weatherItem","weatherItemTopic","semana","ano","DateTime","currentWeatherDetails","dia","setDia","horario","setHorario","setInterval","time","Date","mes","getMonth","data","getDate","getDay","hora","getHours","minutos","getMinutes","umidade","main","humidity","pressao","pressure","vento","wind","speed","nebulosidade","clouds","all","lat","coord","Math","floor","lon","cidade","name","weatherContainer","flex","weatherHeading","weatherSubHeading","weatherItensContainer","rightAlign","weatherPlace","weatherCoords","StyleSheet","create","flexDirection","justifyContent","padding","marginBottom","paddingLeft","fontSize","color","fontWeight","backgroundColor","borderRadius","marginTop","borderWidth","borderColor","elevation","textAlign","image","width","height","CurrentTempContainer","alignItems","temperatura","innerContainer","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, StyleSheet, Image } from 'react-native'\nimport WeatherScroll from '../components/WeatherScroll';\n\nconst WeatherItem = ({ title, value, unit }) => {\n  return (\n    <View style={styles.weatherItem}>\n      <Text style={styles.weatherItemTopic}>{title}</Text>\n      <Text style={styles.weatherItemTopic}>{value}{unit}</Text>\n    </View>\n  )\n}\n\nconst semana = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'];\nconst ano = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\n\nconst DateTime = ({ currentWeatherDetails }) => {\n  const [dia, setDia] = useState('')\n  const [horario, setHorario] = useState('')\n\n  useEffect(() => {\n    setInterval(() => {\n      const time = new Date();\n      const mes = time.getMonth();\n      const data = time.getDate();\n      const dia = time.getDay();\n      const hora = time.getHours();\n      const minutos = time.getMinutes();\n\n      setDia(semana[dia] + ', ' + data + ', ' + ano[mes])\n\n      setHorario((hora < 10 ? '0' + hora : hora) + ':' + (minutos < 10 ? '0' + minutos : minutos))\n    }, 1000)\n  }, [])\n\n  const umidade = currentWeatherDetails.main.humidity\n  const pressao = currentWeatherDetails.main.pressure\n  const vento = currentWeatherDetails.wind.speed\n  const nebulosidade = currentWeatherDetails.clouds.all\n  let lat = currentWeatherDetails.coord.lat\n  lat = Math.floor(lat * 100) / 100;\n  let lon = currentWeatherDetails.coord.lon\n  lon = Math.floor(lon * 100) / 100;\n  const cidade = currentWeatherDetails.name\n\n  return (\n    <View style={styles.weatherContainer}>\n      <View style={{ flex: 2 }}>\n        <View>\n          <Text style={styles.weatherHeading}>{horario}</Text>\n        </View>\n        <View>\n          <Text style={styles.weatherSubHeading}>{dia}</Text>\n        </View>\n        <View style={styles.weatherItensContainer}>\n          <WeatherItem title=\"Umidade\" value={umidade} unit=\"%\" />\n          <WeatherItem title=\"Pressão\" value={pressao} unit=\"hPa\" />\n          <WeatherItem title=\"Vel. Vento\" value={vento} unit=\"m/s\" />\n          <WeatherItem title=\"Nebulosidade\" value={nebulosidade} unit=\"%\" />\n        </View>\n      </View>\n\n      <View style={styles.rightAlign}>\n        <Text style={styles.weatherPlace}>{cidade}</Text>\n        <Text style={styles.weatherCoords}>{lat}N {lon}L</Text>\n      </View>\n    </View>\n  )\n}\n\nexport default DateTime\n\nconst styles = StyleSheet.create({\n  weatherContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 15,\n    marginBottom: 40,\n    paddingLeft: 15,\n  },\n\n  weatherHeading: {\n    fontSize: 45,\n    color: 'white',\n    fontWeight: '100',\n  },\n\n  weatherSubHeading: {\n    fontSize: 25,\n    color: '#eee',\n    fontWeight: '300',\n  },\n\n  weatherItensContainer: {\n    backgroundColor: \"#18181b99\",\n    borderRadius: 10,\n    padding: 10,\n    marginTop: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    elevation: 100,\n  },\n\n  weatherItem: {\n    flexDirection: \"row\",\n    justifyContent: 'space-between'\n  },\n\n  weatherItemTopic: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '100',\n    justifyContent: 'space-between'\n  },\n\n  weatherPlace: {\n    fontSize: 20,\n    color: 'white',\n    textAlign: 'center',\n  },\n\n  weatherCoords: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: '700',\n    textAlign: 'center',\n  },\n\n  rightAlign: {\n    textAlign: 'right',\n    marginTop: 20,\n  },\n\n  image: {\n    width: 150,\n    height: 150,\n  },\n\n  CurrentTempContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#18181b99',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 15,\n    borderColor: 'gray',\n    padding: 15,\n  },\n\n  dia: {\n    fontSize: 20,\n    color: 'white',\n    backgroundColor: 'gray',\n    padding: 10,\n    textAlign: 'center',\n    borderRadius: 50,\n    fontWeight: '200',\n    marginBottom: 15,\n  },\n\n  temperatura: {\n    fontSize: 15,\n    color: 'white',\n    fontWeight: '100',\n    textAlign: 'center',\n  },\n\n  innerContainer: {\n    paddingRight: 40,\n  },\n})"]},"metadata":{},"sourceType":"module"}